name: CI/CD Pipeline
#something
on:
  pull_request:
    branches:
      - main  # Trigger the workflow when a PR is merged into the `main` branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          # Use GITHUB_TOKEN for authentication
          token: ${{ secrets.GITHUB_TOKEN }}

      # Step 2: Set up SSH key using webfactory/ssh-agent
      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.5.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      # Step 3: Ensure `dev` is up to date with `main`
      - name: Update dev branch with latest from main
        run: |
          git fetch origin
          git checkout dev  # Ensure we're on the dev branch
          git merge origin/main  # Merge the latest changes from main into dev
          git push origin dev  # Push updates to dev if necessary

      # Step 4: Debug SSH Connection
      - name: Debug SSH Connection
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }} 
          EC2_USER: ${{ secrets.EC2_USER }}
        run: |
          ssh -v -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST "echo Connected successfully"

      # Step 5: SSH into EC2 and Deploy
      - name: SSH into EC2 and Deploy
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
        run: |
          # SSH into EC2
          ssh -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << 'EOF'
            # Navigate to the application directory
            cd ~/redd_chatbot_new

            # Pull the latest code from the test-ci-cd branch (or main if needed)
            git checkout main
            git fetch origin
            git reset --hard origin/main

            # Build the Docker image
            docker build -t streamlit-app .

            # Stop and remove any existing container with the same name
            docker stop streamlit-app || true
            docker rm streamlit-app || true

            # Run the Docker container with environment variables and restart policy
            docker run -d -p 8501:8501 \
              --name streamlit-app \
              --env-file .env \
              --restart unless-stopped \
              streamlit-app
          EOF