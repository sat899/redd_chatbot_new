name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger the workflow when code is pushed to the `main` branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the latest code
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}  # Use GITHUB_TOKEN for authentication

      # Step 2: Set up SSH key to connect to EC2 instance
      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.5.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      # Step 3: Debug SSH Connection to EC2
      - name: Debug SSH Connection
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }} 
          EC2_USER: ${{ secrets.EC2_USER }}
        run: |
          ssh -v -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST "echo Connected successfully"

      # Step 4: SSH into EC2 and Deploy the Application
      - name: SSH into EC2 and Deploy
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
        run: |
          # SSH into EC2 and deploy the latest code
          ssh -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << 'EOF'
            # Navigate to the application directory
            cd ~/redd_chatbot_new

            # Ensure we're on the correct branch and pull the latest changes from `main`
            git checkout main
            git fetch origin
            git reset --hard origin/main  # Hard reset to sync with the latest changes from `main`

            # Build the Docker image
            docker build -t streamlit-app .

            # Stop and remove any existing container with the same name
            docker stop streamlit-app || true
            docker rm streamlit-app || true

            # Run the Docker container with environment variables and restart policy
            docker run -d -p 8501:8501 \
              --name streamlit-app \
              --env-file .env \
              --restart unless-stopped \
              streamlit-app
          EOF